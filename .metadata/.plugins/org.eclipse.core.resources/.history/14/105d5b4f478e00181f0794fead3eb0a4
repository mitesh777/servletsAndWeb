import java.util.HashSet;

public class HashSetDemo2 {
	public static void main(String[] args) {
		HashSet<Employee> empHashSet = new HashSet<Employee>();
		empHashSet.add(new Employee(1,"A",1200.0));
		empHashSet.add(new Employee(2,"B",12200.0));
		empHashSet.add(new Employee(3,"AC",13200.0));
		empHashSet.add(new Employee(4,"AD",12400.0));
		empHashSet.add(new Employee(5,"AE",12050.0));
		empHashSet.add(new Employee(1,"A",1200.0));
		
		for(Employee emp : empHashSet) {
			System.out.println(emp);
		}
	}
}

class Employee implements Comparable<Employee>{
	private int id;
	private String name;
	private double salary;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getSalary() {
		return salary;
	}
	public void setSalary(double salary) {
		this.salary = salary;
	}
	public Employee(int id, String name, double salary) {
		super();
		this.id = id;
		this.name = name;
		this.salary = salary;
	}
	@Override
	public String toString() {
		return "Employee [id=" + id + ", name=" + name + ", salary=" + salary + "]";
	}
	@Override
	public int hashCode() {
		
		final int prime = 31;
		int result = 1;
		result = prime * result + id;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		long temp;
		temp = Double.doubleToLongBits(salary);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		System.out.println("invoking hashcode value = "+result);
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		System.out.println("equals also");
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Employee other = (Employee) obj;
		if (id == other.id)
			return true;
		return false;
	}
	@Override
	public int compareTo(Employee o) {
		// TODO Auto-generated method stub
		if(this.id < o.getId()) {
			return -1;
		}
		if(this.id> o.getId()) {
			return 1;
		}
		return 0;
	}
	
	
}